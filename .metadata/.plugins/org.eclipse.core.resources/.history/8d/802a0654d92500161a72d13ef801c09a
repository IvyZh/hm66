#include <stdio.h>
#include <stdlib.h>
#include <jni.h>

char*   Jstring2CStr(JNIEnv*   env,   jstring   jstr)
{
	 char*   rtn   =   NULL;
	 //所有字符串的字节码文件都是相同的。
	 jclass   clsstring   =   (*env)->FindClass(env,"java/lang/String");
	 //方法中传递的参数
	 jstring   strencode   =   (*env)->NewStringUTF(env,"GB2312");
	 //获取方法
	 jmethodID   mid   =   (*env)->GetMethodID(env,clsstring,   "getBytes",   "(Ljava/lang/String;)[B");
	 //执行该方法。
	 jbyteArray   barr=   (jbyteArray)(*env)->CallObjectMethod(env,jstr,mid,strencode); // String .getByte("GB2312");
	 //获取字符串的长度
	 jsize   alen   =   (*env)->GetArrayLength(env,barr);
	 //获取首地址
	 jbyte*   ba   =   (*env)->GetByteArrayElements(env,barr,JNI_FALSE);
	 //如果这个字符串组真实存在，则长度是大于0的。
	 if(alen   >   0)
	 {
	  //为其在内存中申请一个地址
	  rtn   =   (char*)malloc(alen + 1);         //"\0"
	  //将这个字符串放到这个练习的空间内。
	  memcpy(rtn,ba,alen);
	  rtn[alen]=0;
	 }
	 (*env)->ReleaseByteArrayElements(env,barr,ba,0);  //
	 return rtn;
}


jstring Java_com_ivy_hm66_activity_JNIActivity_fromC(JNIEnv* env,jobject thiz){
	char * cstr = "this is hello from C哈哈!";
	jstring jstr = (*env)->NewStringUTF(env,cstr);
	return jstr;
}


jint Java_com_ivy_hm66_activity_JNIActivity_add(JNIEnv* env,jobject thiz,jint a,jint b){
	return a +b;
}


jstring Java_com_ivy_hm66_activity_JNIActivity_decode(JNIEnv* env,jobject thiz,jstring pass,jint length){
	//把java字符串转换成c字符串
			char* cstr = Jstring2CStr(env, pass);

			int i;
			for(i = 0; i < length; i++){
				*(cstr + i) -= 1;
			}
			return (*env)->NewStringUTF(env, cstr);
}


void Java_com_ivy_hm66_activity_JNIActivity_handleArr(JNIEnv* env,jobject thiz,jintArray arr){
	//jsize       (*GetArrayLength)(JNIEnv*, jarray);
	jsize size  = (*env)->GetArrayLength(env,arr);
//	jint*       (*GetIntArrayElements)(JNIEnv*, jintArray, jboolean*);

	jint* arrp = (*env)->GetIntArrayElements(env,arr,0);
	int i;
	for(i = 0;i<size;i++){
		*(arrp+i)+=5;
	}
}
